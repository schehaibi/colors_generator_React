{"version":3,"sources":["SingleColor.js","App.js","index.js"],"names":["SingleColor","rgb","weight","index","hexColor","useState","alert","setAlert","bcg","join","hexValue","useEffect","timeout","setTimeout","clearTimeout","className","style","backgroundColor","onClick","navigator","clipboard","writeText","App","color","setColor","error","setError","Values","all","list","setList","onSubmit","e","preventDefault","colors","console","log","type","value","onChange","target","placeholder","map","key","hex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kMAuBeA,EApBK,SAAC,GAAsC,IAApCC,EAAmC,EAAnCA,IAAKC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SAAe,EAC9BC,oBAAS,GADqB,mBACjDC,EADiD,KAC1CC,EAD0C,KAElDC,EAAMP,EAAIQ,KAAK,KACfC,EAAQ,WAAON,GAKrB,OAJAO,qBAAU,WACR,IAAMC,EAAUC,YAAW,WAAQN,GAAS,KAAU,KACtD,OAAO,kBAAKO,aAAaF,MACxB,CAACN,IACG,6BAASS,UAAS,gBAAWZ,EAAQ,IAAM,eAAiBa,MAAO,CAAEC,gBAAgB,OAAD,OAAST,EAAT,MACzFU,QAAS,WACPX,GAAS,GACTY,UAAUC,UAAUC,UAAUX,KAGhC,uBAAGK,UAAU,iBAAiBb,EAA9B,KACA,uBAAGa,UAAU,eAAeL,GAC3BJ,GAAS,uBAAGS,UAAU,SAAb,yB,gBCsBCO,MArCf,WAAgB,IAAD,EACajB,mBAAS,IADtB,mBACNkB,EADM,KACCC,EADD,OAEanB,oBAAS,GAFtB,mBAENoB,EAFM,KAECC,EAFD,OAGWrB,mBAAS,IAAIsB,IAAO,WAAWC,IAAI,KAH9C,mBAGNC,EAHM,KAGAC,EAHA,KAeb,OACE,oCACE,6BAASf,UAAU,aACjB,+CAGA,0BAAMgB,SAhBS,SAACC,GACpBA,EAAEC,iBACF,IACE,IAAIC,EAAS,IAAIP,IAAOJ,GAAOK,IAAI,IACnCE,EAAQI,GACRC,QAAQC,IAAIF,GACZ,MAAOT,GACPC,GAAS,MAUL,2BAAOW,KAAK,OAAOC,MAAOf,EAAOgB,SAAU,SAACP,GAC1CR,EAASQ,EAAEQ,OAAOF,QACjBG,YAAY,UAAU1B,UAAS,UAAKU,EAAQ,QAAU,KAAvB,OAClC,4BAAQV,UAAU,MAAMsB,KAAK,UAA7B,cAGJ,6BAAStB,UAAU,UAChBc,EAAKa,KAAI,SAACnB,EAAMpB,GACf,OAAO,kBAAC,EAAD,eAAawC,IAAKxC,GAAWoB,EAA7B,CAAoCpB,MAAOA,EAAOC,SAAUmB,EAAMqB,aC7BnFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.4b5ad293.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\n\n\nconst SingleColor = ({ rgb, weight, index, hexColor }) => {\n  const [alert, setAlert] = useState(false);\n  const bcg = rgb.join(\",\");\n  const hexValue = `#${hexColor}`\n  useEffect(() => {\n    const timeout = setTimeout(() => { setAlert(false) }, 3000)\n    return ()=> clearTimeout(timeout);\n  }, [alert])\n  return <article className={`color ${index > 10 && 'color-light'}`} style={{ backgroundColor: `rgb(${bcg})` }}\n    onClick={() => {\n      setAlert(true);\n      navigator.clipboard.writeText(hexValue)\n    }}>\n    {/* ${index>10 && 'color-light'} && will add class */}\n    <p className='percent-value'>{weight}%</p>\n    <p className='color-value'>{hexValue}</p>\n    {alert && <p className='alert'>copied to clipboard</p>}\n  </article>\n}\n\nexport default SingleColor\n","import React, { useState } from 'react'\nimport SingleColor from './SingleColor'\nimport Values from 'values.js'\n\nfunction App() {\n  const [color, setColor] = useState(\"\");\n  const [error, setError] = useState(false);\n  const [list, setList] = useState(new Values('#25bb32').all(10))\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      let colors = new Values(color).all(10)\n      setList(colors);\n      console.log(colors);\n    } catch (error) {\n      setError(true);\n    }\n  }\n  return (\n    <>\n      <section className='container'>\n        <h3>\n          color generator\n        </h3>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" value={color} onChange={(e) => {\n            setColor(e.target.value)\n          }} placeholder='#25bb32' className={`${error ? 'error' : null} `} />\n          <button className='btn' type='submit'>generate</button>\n        </form>\n      </section>\n      <section className=\"colors\">\n        {list.map((color,index)=>{\n          return <SingleColor key={index} {...color} index={index} hexColor={color.hex} />\n        })}\n      </section>\n    </>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}